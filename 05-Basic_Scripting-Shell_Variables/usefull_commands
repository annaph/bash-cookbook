--------------------------------------------------------------------------------------------------
Embedding Documentation in Shell Scripts

1. Read script embedded POD format documentation on a screen:
	# perldoc <script>

2. Read just the "usage" sections of the script embedded POD format documentation on a screen:
	# pod2usage <script>

3. Genarate an HTML version for script embedded POD format documentation:
	# pod2html <script> > <output>.html

4. Genarate a man page for script embedded POD format documentation:
	# pod2man <script> > <output>.1

--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
Separating Variable Names from Surrounding Text

1. Full syntax for a variable reference:
	${<variable_name>}

--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
Exporting Variables

1. Export variable:
	# export <variable_name>

2. Assign value to variable and export it:
	# export <variable_name>=<variable_value>

3. View a list of all variable values that would be available (exported) to a subshell:
	# env
   or:
	# export -p

--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
Seeing All Variable Values

1. View a list of all variable values and function definitions available in the current shell:
	# set

--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
Setting Default Values

1. Get default value if variable value is empty or not set:
	# echo ${<variable_name>:-"<default_value>"}
   Note: The value of the variable does not change!

2. Get and set default value if variable value is empty or not set:
	# echo ${<variable_name>:-"<default_value>"}
   Note: The value of the variable changes!

3. Unset the value of a variable:
	# unset <variable_name>

--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
Using null As a Valid Default Value

1. Get and 	set default value if variable value is not set:
	# echo ${<variable_name>="<default_value>"}
   Note: The value of the variable changes! This does not apply if variable value is empty!

--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
Changing Pieces of a String

1. String-manipulation operators:
	-----------------------------------------------------------------------------
	| inside ${ ... } 			|	Action taken								|
	|---------------------------|-----------------------------------------------|
	| name:number:number 		|	Substring starting character, length		|
	| #name 					|	Return the length of the string				|
	| name#pattern 				|	Remove (shortest) front-anchored pattern	|
	| name##pattern 			|	Remove (longest) front-anchored pattern		|
	| name%pattern 				|	Remove (shortest) rear-anchored pattern		|
	| name%%pattern 			|	Remove (longest) rear-anchored pattern		|
	| name/pattern/string 		|	Replace first occurrence					|
	| name//pattern/string		|	Replace all occurrences						|
	-----------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
Using Array Variables

1. Initialize array:
	# <array_name>=(<first_element> <second_element> <third_element> ...)

2. Access array element value:
	# ${<array_name>[<array_index>]}

--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
