--------------------------------------------------------------------------------------------------
Telling If a Command Succeeded or Not

1. Find out did the command succeeded:
	# echo $?
   Note: Shell variable $? will be set with a non-zero value if the command fails!

--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
Running Several Commands in Sequence

1. Run  commands in sequence regardless if the preceding ones fail:
	# <command1> ; <command2> ; <command3>

2. Run commands in sequence, but the command can be run only if preceding succeeded:
	# <command1> && <command2> && <command3>

--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
Running Several Commands All at Once

1. Run a command in the background:
	# <command> &

2. Run commands in parallel:
	# <command1> & <command2> & <command3> &

--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
Using Fewer if Statements

1. Exit any time if failure is encountered:
	# set -e
   Note: This command turns on bash flag e!

--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
Running Long Jobs Unattended

1. Run a job in the background but expecting to exit the shell before the job completes:
	# nohup <command> &

--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
Displaying Error Messages When Failures Occur

1. Display error message when command fails:
	# <command> || printf "5%" "<error message>"

--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
